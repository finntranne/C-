#include <iostream>
#include <math.h>
#include <fstream>
#define SIZE 1000
using namespace std;

struct PHANSO
{
    int t;
    int m;
};

void enterPS(PHANSO &a, fstream &input)
{
    input >> a.t >> a.m;
}

void releasePS(PHANSO a, fstream &output)
{
    output << a.t << " " << a.m;
}

void enterArray(PHANSO A[], int &n)
{
    fstream input;
    input.open("infile09.txt", ios::in);
    input >> n;
    for (int i = 0; i < n; i++)
    {
        enterPS(A[i],input);
    }
}

int cmpPS(PHANSO a, PHANSO b)
{
    float tmp = 1.0 * a.t / a.m - 1.0 * b.t / b.m;
    if (tmp > 0)
        return 1;
    else if (tmp == 0)
        return 0;
    else
        return -1;
}

int gcd(int a, int b)
{
    a = abs(a);
    b = abs(b);
    if (a * b == 0)
        return a + b;
    while (a != b)
    {
        if (a > b)
            a -= b;
        else
            b -= a;
    }
    return a;
}

PHANSO rutGon(PHANSO a)
{
    PHANSO res;
    int UCLN = gcd(a.t, a.m);
    res.t = a.t / UCLN;
    res.m = a.m / UCLN;
    if (res.t < 0 && res.m < 0)
    {
        res.t = abs(res.t);
        res.m = abs(res.m);
    }
    else if (res.t > 0 && res.m < 0)
    {
        res.t = -res.t;
        res.m = abs(res.m);
    }
    return res;
}
PHANSO maxPS(PHANSO A[], int n)
{
    PHANSO max = A[0];
    for (int i = 1; i < n; i++)
    {
        if (cmpPS(A[i], max) == 1)
            max = A[i];
    }
    max = rutGon(max);
    return max;
}

PHANSO sumPS(PHANSO a, PHANSO b)
{
    PHANSO res, tmp;
    res.t = a.t * b.m + b.t * a.m;
    res.m = a.m * b.m;
    return rutGon(res);
}

PHANSO sumPSA(PHANSO A[], int n)
{
    PHANSO res = sumPS(A[0], A[1]);
    for (int i = 2; i < n; i++)
    {
        res = sumPS(res, A[i]);
    }
    return res;
}

PHANSO tichPS(PHANSO a, PHANSO b)
{
    PHANSO res;
    res.t = a.t * b.t;
    res.m = a.m * b.m;
    return rutGon(res);
}

PHANSO tichPSA(PHANSO A[], int n)
{
    PHANSO res = tichPS(A[0],A[1]);
    for (int i = 2; i < n; i++)
    {
        res = tichPS(res, A[i]);
    }
    return res;
}

PHANSO revPS(PHANSO a)
{
    PHANSO res;
    res.t = a.m;
    res.m = a.t;
    res = rutGon(res);
    return res;
}

void revPSA(PHANSO A[], int n, fstream &output)
{
    for (int i = 0; i < n; i++)
    {
        releasePS(revPS(A[i]),output);
        output << " ";
    }
}
int main()
{
    PHANSO A[SIZE];
    int n;
    fstream output;
    output.open("outfile09.txt", ios::out);
    enterArray(A, n);
    releasePS(maxPS(A, n),output);
    output << endl;
    releasePS(sumPSA(A, n),output);
    output << endl;
    releasePS(tichPSA(A, n),output);
    output << endl;
    revPSA(A,n,output);
    output.close();
    return 0;
}
